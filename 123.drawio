<mxfile host="app.diagrams.net" modified="2022-02-14T08:21:42.420Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Safari/537.36" etag="syc45pX2SMIPztXUodkG" version="16.5.6" type="github">
  <diagram id="yQT4MkTp0zRMxbimm6UT" name="第 1 页">
    <mxGraphModel dx="1420" dy="608" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="046RRQSVppgy1fABNuTt-1" value="&lt;h1&gt;HashMap源码解析&lt;/h1&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;imageWidth=28;imageHeight=28;arcSize=12;" vertex="1" parent="1">
          <mxGeometry x="320" y="10" width="220" height="50" as="geometry" />
        </mxCell>
        <mxCell id="046RRQSVppgy1fABNuTt-2" value="&lt;pre style=&quot;background-color: rgb(255, 255, 255); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px; line-height: 1;&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;font color=&quot;#8c8c8c&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;i style=&quot;font-size: 18px;&quot;&gt;// HashMap的默认容量，注：HashMap的容量必定是2的n次方&lt;/i&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final int &lt;/span&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;DEFAULT_INITIAL_CAPACITY &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;= &lt;/font&gt;&lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1 &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;&amp;lt;&amp;lt; &lt;/font&gt;&lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;4&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;; &lt;/font&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// aka 16&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// HashMap的最大容量&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/pre&gt;&lt;pre style=&quot;color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final int &lt;/span&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY &lt;/span&gt;= &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1 &lt;/span&gt;&amp;lt;&amp;lt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;30&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// HashMap的默认的加载因子&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final float &lt;/span&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;DEFAULT_LOAD_FACTOR &lt;/span&gt;= &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0.75f&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// HashMap的链表转为红黑树的阈值&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final int &lt;/span&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;TREEIFY_THRESHOLD &lt;/span&gt;= &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;8&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// HashMap的红黑树退化为链表的阈值&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final int &lt;/span&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;UNTREEIFY_THRESHOLD &lt;/span&gt;= &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;6&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// HashMap数组中元素的个数必须大于等于64才能进行树化&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final int &lt;/span&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MIN_TREEIFY_CAPACITY &lt;/span&gt;= &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;64&lt;/span&gt;;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;spacing=2;fontSize=18;" vertex="1" parent="1">
          <mxGeometry y="80" width="570" height="440" as="geometry" />
        </mxCell>
        <mxCell id="046RRQSVppgy1fABNuTt-3" value="&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// 这个方法用于找打大于等于initialCapacity的最小2次幂&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;static final int &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 98, 122); font-size: 18px;&quot;&gt;tableSizeFor&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;cap) {&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;    // 减一是为了防止cap已经是2的幂，如果已经是2的次幂且没有进行减一操作，&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;    在执行完下面的右移操作后，cap会是原来的2倍&lt;/span&gt;    &lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;    int &lt;/span&gt;n = cap - &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 第一次右移，由于n的二进制表示中总会有一个bit为1，通过无符号右移，最高位的1右移了一位&lt;/i&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    再和原来的n做或操作，就会使得n的二进制表示变为与最高位的1紧邻的右边的一位也是1&lt;/i&gt;&lt;/pre&gt;    n |= n &amp;gt;&amp;gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 第二次右移，这时n已经经过了第一次右移，假设n为000011xxxxx，通过无符号右移两位，会将最高&lt;/i&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    位相邻的两个1右移两位，&lt;/i&gt;&lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;再和原来的n做或操作，这样n的二进制表示中高位就会有4个相邻的1&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;    n |= n &amp;gt;&amp;gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;2&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 第三次右移，同理，n的二进制表示中高位会有8个相邻的1&lt;/i&gt;&lt;/pre&gt;    n |= n &amp;gt;&amp;gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;4&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 第四次右移，同理，n的二进制表示中高位会有16个相邻的1&lt;/i&gt;&lt;/pre&gt;    n |= n &amp;gt;&amp;gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;8&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 第五次右移，同理，n的二进制表示中高位会有32个相邻的1，注：这时最多也就是32个1，已经大于&lt;/i&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    MAXIMUM_CAPACITY，所以取值&lt;/i&gt;&lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;MAXIMUM_CAPACITY&lt;/i&gt;&lt;/pre&gt;    n |= n &amp;gt;&amp;gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;16&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;return &lt;/span&gt;(n &amp;lt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;) ? &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1 &lt;/span&gt;: (n &amp;gt;= &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY&lt;/span&gt;) ? &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY &lt;/span&gt;: n + &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;}&lt;/pre&gt;&lt;/pre&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;" vertex="1" parent="1">
          <mxGeometry y="545" width="860" height="790" as="geometry" />
        </mxCell>
        <mxCell id="046RRQSVppgy1fABNuTt-4" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" vertex="1" parent="1">
          <mxGeometry x="900" y="670" width="520" height="587.83" as="geometry" />
        </mxCell>
        <mxCell id="046RRQSVppgy1fABNuTt-5" value="&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;// HashMap初始化方法&lt;/i&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;public &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 98, 122); font-size: 18px;&quot;&gt;HashMap&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;initialCapacity, &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;float &lt;/span&gt;loadFactor) {&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(initialCapacity &amp;lt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;throw new &lt;/span&gt;IllegalArgumentException(&lt;span style=&quot;color: rgb(6, 125, 23); font-size: 18px;&quot;&gt;&quot;Illegal initial capacity: &quot; &lt;/span&gt;+&lt;br style=&quot;font-size: 18px;&quot;&gt;                                           initialCapacity);&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(initialCapacity &amp;gt; &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;        initialCapacity = &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(loadFactor &amp;lt;= &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0 &lt;/span&gt;|| &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Float&lt;/span&gt;.&lt;span style=&quot;font-style: italic; font-size: 18px;&quot;&gt;isNaN&lt;/span&gt;(loadFactor))&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;throw new &lt;/span&gt;IllegalArgumentException(&lt;span style=&quot;color: rgb(6, 125, 23); font-size: 18px;&quot;&gt;&quot;Illegal load factor: &quot; &lt;/span&gt;+&lt;br style=&quot;font-size: 18px;&quot;&gt;                                           loadFactor);&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;this&lt;/span&gt;.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;loadFactor &lt;/span&gt;= loadFactor;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // tableSizeFor得到的容量却被赋值给了threshold，感觉this.threshold = tableSizeFor(initialCaptacity) * this.loadFactory;&lt;/i&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    才对，但是在HashMap中的构造方法中并没有对table进行初始化，table的初始化被推迟到了put方法中，在put方法中会对threshold进行重新计算&lt;/i&gt;&lt;/pre&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;this&lt;/span&gt;.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;threshold &lt;/span&gt;= &lt;span style=&quot;font-style: italic; font-size: 18px;&quot;&gt;tableSizeFor&lt;/span&gt;(initialCapacity);&lt;br style=&quot;font-size: 18px;&quot;&gt;}&lt;/pre&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;" vertex="1" parent="1">
          <mxGeometry y="1360" width="1200" height="440" as="geometry" />
        </mxCell>
        <mxCell id="046RRQSVppgy1fABNuTt-6" value="&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 98, 122); font-size: 18px;&quot;&gt;putVal&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;hash, &lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K &lt;/span&gt;key, &lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V &lt;/span&gt;value, &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;boolean &lt;/span&gt;onlyIfAbsent,&lt;br style=&quot;font-size: 18px;&quot;&gt;               &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;boolean &lt;/span&gt;evict) {&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;[] tab; &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt; p; &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;n, &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;i&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 将当前的table赋值给tab，table即为HashMap的数组，如果tab为空，则调用resize初始化HashMap&lt;/i&gt;&lt;/pre&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;((tab = &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;table&lt;/span&gt;) == &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null &lt;/span&gt;|| (n = tab.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;length&lt;/span&gt;) == &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;        n = (tab = resize()).&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;pre style=&quot;font-size: 18px; font-family: &amp;quot;jetbrains mono&amp;quot;, monospace;&quot;&gt;&lt;i style=&quot;color: rgb(140, 140, 140); font-size: 18px;&quot;&gt;    // 计算key的位置，如果tab[i]的值为null就把key设置到tab[i]上&lt;/i&gt;&lt;/pre&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;((p = tab[&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;i &lt;/span&gt;= (n - &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;) &amp;amp; hash]) == &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;        tab[&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;i&lt;/span&gt;] = newNode(hash, key, value, &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;);&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else &lt;/span&gt;{&lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果tab[i]的值不是null&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt; e; &lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K &lt;/span&gt;k;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;        &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果当前tab[i]的key等于put的key，就把当前Node赋值给e，后面做value替换&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(p.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;hash &lt;/span&gt;== hash &amp;amp;&amp;amp;&lt;br style=&quot;font-size: 18px;&quot;&gt;            ((k = p.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;key&lt;/span&gt;) == key || (key != &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null &lt;/span&gt;&amp;amp;&amp;amp; key.equals(k))))&lt;br style=&quot;font-size: 18px;&quot;&gt;            e = p;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;        &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果链表已经红黑树化，调用putTreeVal方法找到对应的Node&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else if &lt;/span&gt;(p &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;instanceof &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;TreeNode&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;            e = ((&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;)p).putTreeVal(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;this&lt;/span&gt;, tab, hash, key, value);&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;        &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 遍历链表查询对应的Node&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;binCount = &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;; ; ++binCount) {&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;                &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果链表的next为空，就新建一个Node节点，把put的值放入新建的节点中，&lt;/i&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;font color=&quot;#8c8c8c&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;i style=&quot;font-size: 18px;&quot;&gt;                   再判断链表的长度是否达到红黑树化的阈值，如果达到阈值就进行红黑树化&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/i&gt;&lt;/font&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;                &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;((e = p.&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;) == &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;                    p.&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;= newNode(hash, key, value, &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;);&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;(binCount &amp;gt;= &lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;TREEIFY_THRESHOLD &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;- &lt;/font&gt;&lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;) &lt;/font&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// -1 for 1st&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;                        &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;treeifyBin(tab, hash);&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;break&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                }&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;                &lt;/font&gt;&lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果找打对应的Node，break结束循环返回Node&lt;/i&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/font&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;                &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;(e.&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;hash &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;== hash &amp;amp;&amp;amp;&lt;br style=&quot;font-size: 18px;&quot;&gt;                    ((k = e.&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;key&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;) == key || (key != &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;&amp;amp;&amp;amp; key.equals(k))))&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;break&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                p = e;&lt;br style=&quot;font-size: 18px;&quot;&gt;            }&lt;br style=&quot;font-size: 18px;&quot;&gt;        }&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;(e != &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;) { &lt;/font&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// existing mapping for key&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldValue &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;= e.&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;value&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;(!onlyIfAbsent || &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldValue &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;== &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;                e.&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;value &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;= value;&lt;br style=&quot;font-size: 18px;&quot;&gt;            afterNodeAccess(e);&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldValue&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;        }&lt;br style=&quot;font-size: 18px;&quot;&gt;    }&lt;br style=&quot;font-size: 18px;&quot;&gt;    ++&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;modCount&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;    &lt;/font&gt;&lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果size达到扩容阈值，进行扩容&lt;/i&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/font&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;(++&lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;size &lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;&amp;gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;threshold&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;        resize();&lt;br style=&quot;font-size: 18px;&quot;&gt;    afterNodeInsertion(evict);&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;return null&lt;/span&gt;&lt;font color=&quot;#080808&quot; style=&quot;font-size: 18px;&quot;&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;}&lt;/font&gt;&lt;/pre&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;" vertex="1" parent="1">
          <mxGeometry y="1820" width="850" height="1360" as="geometry" />
        </mxCell>
        <mxCell id="046RRQSVppgy1fABNuTt-7" value="&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;final &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;[] &lt;span style=&quot;color: rgb(0, 98, 122); font-size: 18px;&quot;&gt;resize&lt;/span&gt;() {&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;    &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 当前HashMap的数组赋值给oldTap&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;[] &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab &lt;/span&gt;= &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;table&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;    &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 扩容前table的长度&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap &lt;/span&gt;= (&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab &lt;/span&gt;== &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;) ? &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0 &lt;/span&gt;: &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab&lt;/span&gt;.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;length&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;    &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 旧的扩容阈值&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldThr &lt;/span&gt;= &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;threshold&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap&lt;/span&gt;, newThr = &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;;&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;    &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果当前HashMap的数组长度大于0（已经初始化后有长度）&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap &lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;) {&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;        &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 当前HashMap的数组的长度大于最大容量，将扩容阈值设置为MAX_VALUE，数组长度保持不变&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap &lt;/span&gt;&amp;gt;= &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;threshold &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Integer&lt;/span&gt;.&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAX_VALUE&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;        }&lt;/pre&gt;&lt;pre style=&quot;background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: &amp;quot;jetbrains mono&amp;quot;, monospace; font-size: 18px;&quot;&gt;        &lt;i style=&quot;font-size: 18px; color: rgb(140, 140, 140);&quot;&gt;// 如果旧的table长度*2小于最大容量且大于默认容量，则新的数组长度为原来的两倍&lt;/i&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else if &lt;/span&gt;((&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap &lt;/span&gt;&amp;lt;&amp;lt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap &lt;/span&gt;&amp;gt;= &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;            newThr = &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldThr &lt;/span&gt;&amp;lt;&amp;lt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;; &lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// double threshold&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;    &lt;/span&gt;}&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else if &lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldThr &lt;/span&gt;&amp;gt; &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;) &lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// initial capacity was placed in threshold&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldThr&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else &lt;/span&gt;{               &lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// zero initial threshold signifies using defaults&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap &lt;/span&gt;= &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;        newThr = (&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int&lt;/span&gt;)(&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;DEFAULT_LOAD_FACTOR &lt;/span&gt;* &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt;);&lt;br style=&quot;font-size: 18px;&quot;&gt;    }&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(newThr == &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;float &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;ft &lt;/span&gt;= (&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;float&lt;/span&gt;)&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap &lt;/span&gt;* &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;loadFactor&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;        newThr = (&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap &lt;/span&gt;&amp;lt; &lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;ft &lt;/span&gt;&amp;lt; (&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;float&lt;/span&gt;)&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAXIMUM_CAPACITY &lt;/span&gt;?(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int&lt;/span&gt;)&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;ft &lt;/span&gt;: &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Integer&lt;/span&gt;.&lt;span style=&quot;color: rgb(135, 16, 148); font-style: italic; font-size: 18px;&quot;&gt;MAX_VALUE&lt;/span&gt;);&lt;br style=&quot;font-size: 18px;&quot;&gt;    }&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;threshold &lt;/span&gt;= newThr;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(158, 136, 13); font-size: 18px;&quot;&gt;@SuppressWarnings&lt;/span&gt;({&lt;span style=&quot;color: rgb(6, 125, 23); font-size: 18px;&quot;&gt;&quot;rawtypes&quot;&lt;/span&gt;,&lt;span style=&quot;color: rgb(6, 125, 23); font-size: 18px;&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;})&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;[] &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab &lt;/span&gt;= (&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;[])&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;new &lt;/span&gt;Node[&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap&lt;/span&gt;];&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;table &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab &lt;/span&gt;!= &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;for &lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;int &lt;/span&gt;j = &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap&lt;/span&gt;; ++j) {&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt; e;&lt;br style=&quot;font-size: 18px;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;((e = &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab&lt;/span&gt;[j]) != &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldTab&lt;/span&gt;[j] = &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(e.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next &lt;/span&gt;== &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab&lt;/span&gt;[e.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;hash &lt;/span&gt;&amp;amp; (&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newCap &lt;/span&gt;- &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;1&lt;/span&gt;)] = e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else if &lt;/span&gt;(e &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;instanceof &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;TreeNode&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;                    ((&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt;)e).split(&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;this&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab&lt;/span&gt;, j, &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap&lt;/span&gt;);&lt;br style=&quot;font-size: 18px;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else &lt;/span&gt;{ &lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;// preserve order&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140); font-style: italic; font-size: 18px;&quot;&gt;                    &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt; loHead = &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;, loTail = &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt; hiHead = &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;, hiTail = &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;Node&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 126, 138); font-size: 18px;&quot;&gt;V&lt;/span&gt;&amp;gt; next;&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;do &lt;/span&gt;{&lt;br style=&quot;font-size: 18px;&quot;&gt;                        next = e.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;((e.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;hash &lt;/span&gt;&amp;amp; &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap&lt;/span&gt;) == &lt;span style=&quot;color: rgb(23, 80, 235); font-size: 18px;&quot;&gt;0&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(loTail == &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;                                loHead = e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;                                &lt;/span&gt;loTail.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next &lt;/span&gt;= e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                            loTail = e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                        }&lt;br style=&quot;font-size: 18px;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else &lt;/span&gt;{&lt;br style=&quot;font-size: 18px;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(hiTail == &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;)&lt;br style=&quot;font-size: 18px;&quot;&gt;                                hiHead = e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;else&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;                                &lt;/span&gt;hiTail.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next &lt;/span&gt;= e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                            hiTail = e;&lt;br style=&quot;font-size: 18px;&quot;&gt;                        }&lt;br style=&quot;font-size: 18px;&quot;&gt;                    } &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;while &lt;/span&gt;((e = next) != &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;);&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(loTail != &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;                        loTail.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab&lt;/span&gt;[j] = loHead;&lt;br style=&quot;font-size: 18px;&quot;&gt;                    }&lt;br style=&quot;font-size: 18px;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;if &lt;/span&gt;(hiTail != &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;) {&lt;br style=&quot;font-size: 18px;&quot;&gt;                        hiTail.&lt;span style=&quot;color: rgb(135, 16, 148); font-size: 18px;&quot;&gt;next &lt;/span&gt;= &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab&lt;/span&gt;[j + &lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;oldCap&lt;/span&gt;] = hiHead;&lt;br style=&quot;font-size: 18px;&quot;&gt;                    }&lt;br style=&quot;font-size: 18px;&quot;&gt;                }&lt;br style=&quot;font-size: 18px;&quot;&gt;            }&lt;br style=&quot;font-size: 18px;&quot;&gt;        }&lt;br style=&quot;font-size: 18px;&quot;&gt;    }&lt;br style=&quot;font-size: 18px;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 51, 179); font-size: 18px;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;newTab&lt;/span&gt;;&lt;br style=&quot;font-size: 18px;&quot;&gt;}&lt;/pre&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;" vertex="1" parent="1">
          <mxGeometry y="3230" width="970" height="1840" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
